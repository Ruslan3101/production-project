{
  "compilerOptions": {
    "outDir": "./dist/",
    //Подсвечивает все места где не указан тип
    //Однако это не означает, что теперь вовсе нельзя использовать any
    //Это ознаачаает ли шь, что в подобныз ситуациях разработчик должен явно писать any
    "noImplicitAny": true,
    "module": "ESNext",
    // В каккую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    "jsx": "react-jsx",
    //Компилятор будет обрабатывать не только TS файлы но и JS
    "allowJs": true,
    "moduleResolution": "node",
    //esModuleInterop  позволяет работать с пакетами, которые использует
    // common js как с обычными пакетами с помощью import ( require() module.export) = common js
    //import Moment form 'moment';
    // без флага esModuleInterop результат undefined
    // console.log(Moment);
    //с флагои результат [object Object]
    // console.log(Moment)
    "baseUrl": ".",
    "paths": {
      "*": ["./src/*"]
    },
    "esModuleInterop": true,
    //    Если какая-либо библиотека не имеет default import,
    //    лодеры вроде ts-loader или  babel-loader автоматически создают их,
    //    вместо такого импорта,
    //    import * as React from 'react' ;
    //    можно писать такой
    //    import React from 'react'
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
    "include": [
      "./config/jest/setupTest.ts",
      "**/*.ts",
      "**/*.tsx",
    ],
}
